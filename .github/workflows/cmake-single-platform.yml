# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main", "test_ci" ]
  pull_request:
    branches: [ "main", "test_ci" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    container: gcc:13

    steps:
      - uses: actions/checkout@v4.1.4
      - name: Install CMake
        run: |
          apt update
          apt install -y wget
          wget https://github.com/Kitware/CMake/releases/download/v3.29.2/cmake-3.29.2-linux-x86_64.sh
          chmod +x cmake-3.29.2-linux-x86_64.sh
          ./cmake-3.29.2-linux-x86_64.sh --prefix=/usr/local --exclude-subdir
          cmake --version

      - name: Submodule update
        run: |
          pwd
          git config --global --add safe.directory /__w/SCSSH/SCSSH
          git submodule update --init --recursive

      - name: Build
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build .

      - name: Test
        run: |
          echo "Testing not yet implemented"